* IODEVICE / 画像認識 高速化：進捗連絡会 <2015-03-30 月>@ 18:00-19:00 at 電話会議
**   電話会議システム
   外線アクセス番号：03-4503-6121, 0120-914803
   カンファレンスCD：1773317928
**   出席
   CL/萩、加藤、高田、吉岡
   HiICS/佐藤、斉藤、川上
   REC/高草、藤巻
   REL/小林、星、大橋、木村
   ADaC/清水、福富、工藤、慶野
   日研/宇田川、伊藤
**   課題管理表F-up
 1. メモリドライバ改善版動作確認 - CL/加藤様
    実車で動作確認のみだが、パフォーマンス詳細確認出来ていない。
    REL提示のパフォーマンスは出ていると思われる。
 2. CVlib・IMPlib改善版動作確認 - CL/加藤様
   約半分に高速化を確認。クローズとする。
 3. CVlibアルゴリズム改善版動作確認 - CL/加藤様
    SoDで実測半減の高速化を確認。クローズとする。
    実測値
     空間マップ:60mm
     静止物体：300mm
     MOD：350mm
 4. メモリリージョンオブジェクトの生成・破棄 - CL/加藤様
    - [X] 3/31 調査中も一次確認では生成・破棄をしているものなし -  加藤様
 5. 長期レンジでのパフォーマンス改善 - CL/加藤様
    他の課題クローズ後に別途打合せ
 6. ドライバ性能 - REL/星さん
    - [X] 3/31迄に回答：HW部門から回答入手したので、打合せ後報告する - REC
 7. DBSC動作調整レジスタ設定
    3/19回答済。
 8. DLL化対応検討 - ADac/慶野さん
     DLLのメモリサイズ拡張は技術的には可能、
     現在のDLLメモリサイズは13MBだが、今後最大値はどのくらい？
     GHSとしては、LoadModuleの機構を使用したダイナミックダウンロード方式の
      方が堅牢なため、こちらをお勧めしたい
     川上様：ユースケースは過去のQAでもやり取り済のはず
     川上様：ダイナミックダウンロード方式はCPU優先度高く、他アプリへの影響大きくNG
     川上様：起動から1.5秒以内でカメラ画像出力する必要がある
     福富様：DLLメモリサイズ増加は技術的には可能。しかしインパクト大なのでやりたくない
             ADaC側で画像表示1.5秒以内出力の対応を行いますよ。
     川上様：それはちょっと待った

    - [X] DLLメモリサイズ増加対応方針決定からリリースまでの期間の回答
    - [X] 4/03 DLLメモリサイズ増加対応方針決定 - ADaC
    - [X] 4/03 代替案の提示 - ADaC
 9. usleepについて - ADaC/慶野さん
     3/27回答の説明
     吉岡様：そもそもusleepの調査をお願いすることになった背景説明
             usleepの動作で遅延が発生している気がする、
             遅延が発生しているとなると全体のパフォーマンスに影響がある為
 -> 立会実験実施する
 -> その前に仮説を立ててた上で立会実験を実施したい
 - [X] 4/03 Integrityのusleepの割り込みの実装方法の確認。
       Linuxのusleepと同じ実装なのではないか？ ＜ 木村さん
       [[http://d.hatena.ne.jp/naoya/20080122/1200960926][Linux のスリープ処理、タイマ処理の詳細を見る]]
 10. IODeviceNortifyについて
 - [X] 4/03 一次回答 GHS-ADaCでリモート解析を行う。
 11. バーチャル空間の割り込み通知に掛かる処理時間
    3/25回答の説明
 -  8.ユーザ空間からカーネル空間を経由したレジスタアクセスに時間が掛かる説明
    一般にカーネルコールでは、以下の動作に大部分の時間を消費します。

    ・バッファ転送時に、カーネル内のメモリマッピングを検索する
    ・コンテキスト切り替え

    MMUによる基本的なメモリ保護とソフトウェアパーティショニングの実現に
    必要とされるコストです。
    また、割り込みハンドラ実行時に必要とされる動作は、以下のとおりです。

    ・GICのアクセス
    ・INTEGRITYのIODeviceの通知とルーティング（スケジューリング）の処理
    ・コンテキスト切り替え

    通常これらに数μsecかかりますので、カーネルコールが発生するIODevice経由
    でのレジスタアクセスは、MemoryRegionによる共有に変更することで高速化で
    きることは、すでにルネサス様のほうで対応されております。

    1月のオンサイトでわかったように、デバッグライブラリをリンクしない、
    kernel_opt を使用する、Ethernetケーブルをはずす、-Ospeed最適化を使用する
    ことなどで、高速化できる可能性があります。
 12. MSIOFドライバ 32Bytesのデータ送受信に平均で20usecの実測は期待値？
 - [X] ハードウェアチームへ別途確認 - REL/大橋さん
       MSIOFは2MHzで使用 - HiICS/佐藤様
 13. Transmit and Receive Proceduresのフローに従って制御していますが、NO.12のドライバ処理時間を短くするため、省略できる制御は無いでしょうか？
 - [X] DMACのフロー解釈(使い方?)について別途教えて下さい
** 加藤様議事
*** 宿題事項
 1. No.4
 - 調査結果の展開(～3/31(火))
   担当：クラリオン
 2. No.6
 - H/W部門からの回答を課題管理表に記載の上展開
   担当：ルネサス様
   ⇒済
 3. No.8
 - 一次回答(～4/3(金))
 - DLLロードのサイズを拡大するかどうかの方針決め ADaC様→GHS様
    (代替案のご提案含む)
   担当：ADaC様
 4. No.9
 - usleepの実装がLinuxと同じかどうかの確認 ADaC様→GHS様
   (～4/3(金))
   担当：ADaC様
 5. No.10
 - 一次回答(～4/3(金))
   担当：ADaC様
 6. No.12
 - H/W部門からの回答を課題管理表に記載の上展開
   担当：ルネサス様
 7. No.13
 - DMACを使用する場合のフローの解釈(仕様)を確認
   担当：ルネサス様
 8. その他
 - 画認アルゴリズムの概要を説明する場を設ける
   担当：クラリオン
*** ○参加者
  ルネサスイーストン：
   高草様、藤巻様
  ルネサス：
   星様、大橋様、木村様 (武蔵)
   小林様 (日本ビル)
  ADaC：
   清水様、福留様 (本社)
   工藤様、慶野様 (武蔵)
  日立研究所：
   伊藤様、宇田川様
  日立産業制御ソリューションズ：
   斎藤様、川上様 (戸塚)
   佐藤(路)様 (C-1)
  クラリオン：
   吉岡、萩、高田、加藤

